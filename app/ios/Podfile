require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-unimodules/cocoapods.rb'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

target 'app' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()

  use_modular_headers!

  pod 'ReactNativeShareExtension', :podspec => '../node_modules/react-native-share-extension/ReactNativeShareExtension.podspec'
  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'
  # pod 'Firebase/Core'
  # pod 'Firebase/Auth'
  # pod 'Firebase/Firestore'
  # pod 'Firebase/Database'
  # pod 'Firebase/Functions'
  # pod 'Firebase/Storage'

  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'

  use_unimodules!

  pod 'RNSentry', :path => '../node_modules/@sentry/react-native'

  pod 'react-native-webview', :path => '../node_modules/react-native-webview'
  pod 'react-native-safe-area-context', :path => '../node_modules/react-native-safe-area-context'

  pod 'VisionCamera', :path => '../node_modules/react-native-vision-camera'

  pod 'vision-camera-code-scanner', :path => '../node_modules/vision-camera-code-scanner'

  pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'

  target 'MemexShare' do
    use_native_modules!
    inherit! :complete
  end
end

post_install do |installer|
  react_native_post_install(installer)

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # config.build_settings.delete "IPHONEOS_DEPLOYMENT_TARGET"
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
    end

    # # The following may fix the Time.h error
    # case target.name
    # when 'RCT-Folly'
    #   target.build_configurations.each do |config|
    #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
    #   end
    # end
  end

  ## Fix for XCode 15
  system('sh fix-build-for-xcode15.sh')

  ## Fix for XCode 12.5 (OLD)
  #  find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
  #     "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
  #  find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
  #     "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
end

# def find_and_replace(dir, findstr, replacestr)
#   Dir[dir].each do |name|
#       text = File.read(name)
#       replace = text.gsub(findstr,replacestr)
#       if text != replace
#           puts "Fix: " + name
#           File.open(name, "w") { |file| file.puts replace }
#           STDOUT.flush
#       end
#   end
#   Dir[dir + '*/'].each(&method(:find_and_replace))
# end
