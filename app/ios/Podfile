require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-unimodules/cocoapods.rb'

platform :ios, '10.0'

target 'app' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  use_flipper!()

  # pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
  # pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
  # pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
  # pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
  # pod 'React', :path => '../node_modules/react-native/'
  # pod 'React-Core', :path => '../node_modules/react-native/'
  # pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  # pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
  # pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  # pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  # pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  # pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  # pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  # pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  # pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  # pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  # pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  # # pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'

  # pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  # pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  # pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  # pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  # pod 'ReactCommon/jscallinvoker', :path => "../node_modules/react-native/ReactCommon"
  # pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  # pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  # pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  # pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  # pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  pod 'ReactNativeShareExtension', :podspec => '../node_modules/react-native-share-extension/ReactNativeShareExtension.podspec'

  pod 'Firebase/Core'
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore'
  pod 'Firebase/Database', '~> 8.4.0'
  pod 'Firebase/Functions'

  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'

  use_unimodules!

  pod 'RNSecureRandom', :path => '../node_modules/react-native-securerandom'

  pod 'RNSentry', :path => '../node_modules/@sentry/react-native'


  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  pod 'react-native-safe-area-context', :path => '../node_modules/react-native-safe-area-context'

  target 'MemexShare' do
    use_native_modules!
    inherit! :complete
  end
end

# pre_install do |installer|
#   ## Fix for images not appearing in-app in iOS >14
#   puts("Image fix for ios14: remove this when upgradeing to >= 0.63.3")
#   find = "_currentFrame.CGImage;"
#   replace = "_currentFrame.CGImage ;} else { [super displayLayer:layer];"
#   op = `sed -ie "s/#{find}/#{replace}/" ../node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.m`
#   puts("Image fix for ios14 done")
# end

post_install do |installer|
  react_native_post_install(installer)

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
    end
  end

   ## Fix for XCode 12.5
   find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
      "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
   find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
      "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)
      if text != replace
          puts "Fix: " + name
          File.open(name, "w") { |file| file.puts replace }
          STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
