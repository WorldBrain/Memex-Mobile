setup_travis
fastlane_version '2.140.0'

MAIN_APP_ID = "io.worldbrain.memex"
# MAIN_APP_PROFILE = "match AppStore io.worldbrain.memex"
MAIN_APP_PROFILE = "Automatic"
EXT_APP_ID = "io.worldbrain.memex.MemexShare"
EXT_APP_PROFILE = "Automatic"
# EXT_APP_PROFILE = "match AppStore io.worldbrain.memex.MemexShare"
TEAM = "WorldBrain UG (haftungsbeschrÃ¤nkt)"
XCWORKSPACE_PATH = "./ios/app.xcworkspace"
XCPROJ_PATH = "./ios/app.xcodeproj"

settings_to_override = {
  :BUNDLE_IDENTIFIER => MAIN_APP_ID,
  :PROVISIONING_PROFILE_SPECIFIER => MAIN_APP_PROFILE,
  :DEVELOPMENT_TEAM => TEAM
}

before_all do
    ensure_git_status_clean
    git_pull
end

platform :ios do
    desc 'Fetch certificates and provisioning profiles'
    lane :certificates do
        # match(app_identifier: [MAIN_APP_ID, EXT_APP_ID], type: 'development', readonly: true)
        match(app_identifier: [MAIN_APP_ID, EXT_APP_ID], type: 'appstore', readonly: true)
    end

    desc 'Build a new iOS application version.'
    private_lane :build do
        certificates
        increment_build_number(xcodeproj: XCPROJ_PATH)
        gym(
            scheme: 'app',
            configuration: "Production",
            workspace: XCWORKSPACE_PATH,
            xcargs: settings_to_override,
            clean: true,
            silent: true,
            suppress_xcode_output: true,
            export_options: {
                method: "app-store",
                provisioningProfiles: {
                  MAIN_APP_ID => MAIN_APP_PROFILE,
                  EXT_APP_ID => EXT_APP_PROFILE
                }
            }
        )
    end

    desc 'Ship to Testflight.'
    lane :beta do
        # ensure_git_branch(branch: 'develop')
        build
        pilot
        commit_version_bump(message: 'Bump iOS version', xcodeproj: XCPROJ_PATH)
        push_to_git_remote
    end
end

platform :android do
    desc 'Build a new Android application version.'
    private_lane :build do
        gradle(task: 'clean', project_dir: 'android/')
        gradle(task: 'updateVersion', project_dir: 'android/', properties: { "version_number" => options[:newVersion] })
        gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
    end

    desc 'Ship to Playstore Beta.'
    lane :beta do
        ensure_git_branch(branch: 'develop')
        build
        supply(track: 'beta', track_promote_to: 'beta')
        git_commit(path: ['./android/gradle.properties'], message: 'Bump Android version')
        push_to_git_remote
    end
end
