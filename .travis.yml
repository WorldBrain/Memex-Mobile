aliases:
  - &android
    components:
      - tools
      - platform-tools
      - extra-google-m2repository
    licenses:
      - "android-sdk-preview-license-52d11cd2"
      - "android-sdk-license-.+"
      - "google-gdk-license-.+"

  - &android-cache
    yarn: true
    bundler: true
    directories:
      - ~/.cache/yarn
      - ~/.gradle/caches
      - ~/.gradle/wrapper
      - ~/.android/build-cache
      - ./app/node_modules

  - &ios-cache
    yarn: true
    bundler: true
    directories:
      - ~/.rncache
      - ~/Library/Caches/Yarn
      - ~/Library/Caches/CocoaPods
      - ./app/node_modules

  - &test-cache
    yarn: true
    directories:
      - ~/.cache/yarn
      - ./app/node_modules

jobs:
  include:
    - stage: lint-and-test
      # if: branch NOT IN (master, develop) AND type = push
      if: branch = master
      language: node_js
      cache: *test-cache
      node_js:
        - "10"
      install:
        - git submodule update --init --recursive
        - cd app
        - yarn install --frozen-lockfile --non-interactive --cache-folder ~/.cache/yarn
      script:
        - yarn lint
        - yarn test --colors

    - stage: ios-production
      # if: branch = master AND type = push
      os: osx
      osx_image: xcode11.3
      language: node_js
      cache: *ios-cache
      node_js:
        - lts/*
      before_install:
        - npm install -g yarn
      install:
        - "./write-ios-keys.sh production"
        - "./install-deps-ios.sh"
      script:
        - cd app
        - yarn ios:prod

    - stage: android-production
      # if: branch = master AND type = push
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm -f ~/.gradle/caches/modules-2/modules-2.lock
        - rm -fr ~/.gradle/caches/*/plugin-resolution/
      cache: *android-cache
      before_install:
        - rvm install 2.6.5
        - nvm install 10.17.0
        - npm install -g yarn
        - yes | sdkmanager "platforms;android-28"
        - yes | sdkmanager "build-tools;28.0.3"
      install:
        - "./write-android-keys.sh production"
        - "./install-deps-android.sh"
      script:
        - cd app
        - yarn android:prod

    - stage: ios-development
      if: branch = develop AND type = push
      os: osx
      osx_image: xcode11.3
      language: node_js
      cache: *ios-cache
      node_js:
        - lts/*
      before_install:
        - npm install -g yarn
      install:
        - "./write-ios-keys.sh"
        - "./install-deps-ios.sh"
      script:
        - cd app
        - yarn ios:dev

    - stage: android-development
      if: branch = develop AND type = push
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm -f ~/.gradle/caches/modules-2/modules-2.lock
        - rm -fr ~/.gradle/caches/*/plugin-resolution/
      cache: *android-cache
      before_install:
        - rvm install 2.6.5
        - nvm install 10.17.0
        - npm install -g yarn
        - yes | sdkmanager "platforms;android-28"
        - yes | sdkmanager "build-tools;28.0.3"
      install:
        - "./write-android-keys.sh"
        - "./install-deps-android.sh"
      script:
        - cd app
        - yarn android:dev

env:
  global:
    - APP_NAME="Memex Go"
    - 'DEVELOPER_NAME="iPhone Distribution: WorldBrain UG (haftungsbeschr√§nkt)"'
    - PROFILE_NAME="travis"
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_ABI=armeabi-v7a
